version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: abunfi-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: abunfi
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - abunfi-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: abunfi-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/abunfi?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key
      RPC_URL: https://arb1.arbitrum.io/rpc
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - abunfi-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: abunfi-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_WEB3AUTH_CLIENT_ID: demo-client-id
      REACT_APP_CHAIN_ID: 42161
      REACT_APP_RPC_URL: https://arb1.arbitrum.io/rpc
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - abunfi-network
    command: npm start

  # Hardhat Node (for local development)
  hardhat:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    container_name: abunfi-hardhat
    restart: unless-stopped
    ports:
      - "8545:8545"
    volumes:
      - ./contracts:/app
      - /app/node_modules
    networks:
      - abunfi-network
    command: npx hardhat node --hostname 0.0.0.0

  # Redis (for caching and sessions)
  redis:
    image: redis:7.2-alpine
    container_name: abunfi-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - abunfi-network
    command: redis-server --appendonly yes

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  abunfi-network:
    driver: bridge
