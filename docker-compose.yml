version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: abunfi-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      # PostgreSQL (primary database)
      DATABASE_URL: postgresql://abunfi_user:abunfi_password@postgres:5432/abunfi
      # Redis (for caching and sessions)
      REDIS_URL: redis://redis:6379
      # Application config
      JWT_SECRET: your-super-secret-jwt-key
      RPC_URL: https://sepolia.infura.io/v3/YOUR_INFURA_PROJECT_ID
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - abunfi-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: abunfi-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_WEB3AUTH_CLIENT_ID: demo-client-id
      REACT_APP_CHAIN_ID: 11155111
      REACT_APP_RPC_URL: https://sepolia.infura.io/v3/YOUR_INFURA_PROJECT_ID
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - abunfi-network
    command: npm start

  # Hardhat Node (for local development)
  hardhat:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    container_name: abunfi-hardhat
    restart: unless-stopped
    ports:
      - "8545:8545"
    volumes:
      - ./contracts:/app
      - /app/node_modules
    networks:
      - abunfi-network
    command: npx hardhat node --hostname 0.0.0.0

  # PostgreSQL Database (for financial data)
  postgres:
    image: postgres:16-alpine
    container_name: abunfi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: abunfi
      POSTGRES_USER: abunfi_user
      POSTGRES_PASSWORD: abunfi_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    networks:
      - abunfi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U abunfi_user -d abunfi"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions)
  redis:
    image: redis:7.2-alpine
    container_name: abunfi-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - abunfi-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  abunfi-network:
    driver: bridge
